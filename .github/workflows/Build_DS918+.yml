name: Build_DS918

on: 
  repository_dispatch:
  workflow_dispatch:

# 定时触发编译
#  schedule:
#    - cron: 30 6 * * *

# 点赞☆Star触发编译
#  watch:
#    types: [started]

jobs:
  Build_DS918:
    runs-on: ubuntu-20.04
    steps:
    - name: Clone Repository
      uses: actions/checkout@v2

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E swapoff -a
        sudo -E rm -f /swapfile
        sudo -E docker image prune -a -f
        sudo -E snap set system refresh.retain=2
        sudo -E apt-get -y purge azure* dotnet* firefox ghc* google* hhvm llvm* mono* mysql* openjdk* php* zulu*
        sudo -E apt-get -y autoremove --purge
        sudo -E rm -rf /usr/share/dotnet /usr/local/lib/android/sdk /etc/mysql /etc/php /usr/local/share/boost
        [ -n "$AGENT_TOOLSDIRECTORY" ] && sudo rm -rf "$AGENT_TOOLSDIRECTORY"
        sudo -E apt-get update -y
        sudo -E apt-get install -y build-essential rsync asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core p7zip p7zip-full msmtp libssl-dev texinfo libreadline-dev libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint ccache curl wget vim nano python3-dev haveged lrzsz device-tree-compiler scons bc bison ca-certificates clang cmake file gcc g++ ninja-build lld make u-boot-tools xz-utils binutils-dev
        wget -qO - https://raw.githubusercontent.com/friendlyarm/build-env-on-ubuntu-bionic/master/install.sh | sed 's/python-/python3-/g' | /bin/bash
        sudo -E apt-get clean
        git config --global user.name 'GitHub Actions' && git config --global user.email 'noreply@github.com'
        df -h
        
    - name: Build DS918+
      run: |
        cd redpill-tool-chain      
        
        ./redpill_tool_chain.sh build apollolake-6.2.4-25556 && ./redpill_tool_chain.sh auto apollolake-6.2.4-25556 && ./redpill_tool_chain.sh build apollolake-7.0-41890 && ./redpill_tool_chain.sh auto apollolake-7.0-41890 && ./redpill_tool_chain.sh build apollolake-7.0.1-42218 && ./redpill_tool_chain.sh auto apollolake-7.0.1-42218
       
    - name: Assemble Artifact
      id: assemble_artifact
      run: |
        rm -rf ./DSM7_Out
        mkdir -p ./DSM7_Out/
        sudo chmod -R 777 redpill-tool-chain/images        
        mv redpill-tool-chain/images/*.img ./DSM7_Out/
                                
               
    - name: Upload
      uses: actions/upload-artifact@main
      with:
        name: DS918+_Boot_image
        path: DSM7_Out/*.img

    - name: Generate Tag & Release Name
      id: generate_name
      run: |
        time=$(date +%Y%m%d%H%M)
        release_tag="$time"
        release_name="DS918+_Boot_image-$(date +%Y%m%d)"
        echo "##[set-output name=release_name;]$release_name"
        echo "##[set-output name=release_tag;]$release_tag"        

    - name: Create Release & Upload
      uses: ncipollo/release-action@v1
      with:
        artifacts: DSM7_Out/*.img
        name: ${{ steps.generate_name.outputs.release_name }}
        tag: ${{ steps.generate_name.outputs.release_tag }}
        token: ${{ secrets.GITHUB_TOKEN }}
                 
